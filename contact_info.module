<?php
/**
* @file
* Contact info module that provides blocks and tokens.
*/

// Load default social media sites.
module_load_include('inc', 'contact_info', 'includes/contact_info.social');

/**
 * Implements hook_menu().
 */
function contact_info_menu() {

  $items['admin/content/contact-info'] = array(
    'title' => 'Contact information',
    'file' => 'includes/contact_info.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('contact_info_setup'),
    'access arguments' => array('modify contact info'),
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function contact_info_permission() {
  return array(
    'modify contact info' =>  array(
      'title' => t('Modify contact information'),
      'description' => t('Modify contact and social media information.'),
    ),
  );
}

/**
 * Implements hook_token_info().
 */
function contact_info_token_info() {
  $info = array();
  // Define new token type.
  $info['types']['contact_info'] = array(
    'name' => t('Contact info'),
    'description' => t('A token type that provides data from the contact info module.'),
  );
  // Define new tokens.
  $info['tokens']['contact_info']['contact_info_address'] = array(
    'name' => t('Address'),
    'description' => t('A token containing the address entered in the contact info form.'),
  );
  $info['tokens']['contact_info']['contact_info_phone'] = array(
    'name' => t('Phone'),
    'description' => t('A token containing the phone number entered in the contact info form.'),
  );

  return $info;
}

/**
 * Implements hook_tokens().
 */
function contact_info_tokens($type, $tokens, array $data = array(), array $options = array()) {
  // Grab contact info data
  $contact_info = variable_get('contact_info', '');

  $replacements = array();

  if ($type == 'contact_info') {
    // Loop through available tokens.
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'contact_info_address':
          $replacements[$original] = $contact_info['contact_address'];
          break;
        case 'contact_info_phone':
          $replacements[$original] = $contact_info['contact_phone'];
      }
    }
  }

  return $replacements;
}

/**
 * Implements hook_contextual_links_view_alter().
 */
function contact_info_contextual_links_view_alter(&$element, &$items) {
  // Contextual link to edit contact info.
  if (isset($element['#element']['#block']) && $element['#element']['#block']->delta == 'contact_info_block') {
    $element['#links']['edit-content'] = array(
      'title' => 'Edit contact info',
      'href' => url('admin/content/contact-info', array(
        'absolute' => TRUE,
        'query' => array(
          'destination' => current_path(),
        ),
      )),
    );
  }
  // Contextual link to edit social media links.
  if (isset($element['#element']['#block']) && $element['#element']['#block']->delta == 'social_media_block') {
    $element['#links']['edit-content'] = array(
      'title' => 'Edit social media links',
      'href' => url('admin/content/contact-info', array(
        'absolute' => TRUE,
        'query' => array(
          'destination' => current_path(),
        ),
      )),
    );
  }
}

/**
 * Creates a hook that other modules can implement to set available social
 * media sites.
 */
function contact_info_fetch_social_media() {
  $social_media = module_invoke_all('contact_info_social_media_info');
  drupal_alter('contact_info_social_media', $social_media);

  return $social_media;
}

/**
 * Implements hook_block_info().
 */
function contact_info_block_info() {
  $blocks['contact_info_block'] = array(
    'info' => t('Contact info block'),
  );

  $blocks['social_media_block'] = array(
    'info' => t('Social media block'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function contact_info_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'contact_info_block':
      $block['content'] = contact_info_block_content();
      break;
    case 'social_media_block':
      $block['content'] = social_media_block_content();
      break;
  }

  return $block;
}

/**
 * Content for contact info block.
 */
function contact_info_block_content() {
  // Grab contact info data.
  $contact_info = variable_get('contact_info', '');

  // Build render array.
  $output = array(
    'address' => array(
      '#markup' => '<div class="contact-address">' . check_markup($contact_info['contact_address']) . '</div>',
    ),
    'phone' => array(
      '#markup' => '<div class="contact-phone">' . $contact_info['contact_phone'] . '</div>',
    ),
  );

  return $output;
}

/**
 * Content for social media block.
 */
function social_media_block_content() {
  // Add contact info css
  drupal_add_css(drupal_get_path('module', 'contact_info') . '/theme/css/contact_info.css');

  $data = array();

  // Grab social media data.
  $social_media_sites = contact_info_fetch_social_media();
  $contact_info = variable_get('contact_info', '');

  // Structure data for output.
  foreach ($contact_info['social_media']['social_media_sites'] as $social_media_site) {
    if ($social_media_site) {
      $data[$social_media_site] = array(
        'url' => $contact_info['social_media'][$social_media_site]['url'],
        'weight' => $contact_info['social_media'][$social_media_site]['weight'],
        'key' => $social_media_sites[$social_media_site]['key'],
      );
    }
  }

  // Sort data array by weight.
  uasort($data, function($a, $b) {
    if (isset($a['weight']) && isset($b['weight'])) {
      return ($a['weight'] - $b['weight']);
    }
  });

  $output = array();

  // Build render array to output social media links.
  if ($data) {
    foreach ($data as $social_media_site_key => $social_media_site) {
      $output[$social_media_site_key] = array(
        '#theme' => 'link',
        '#text' => $social_media_site['key'],
        '#path' => $social_media_site['url'],
        '#options' => array(
          'attributes' => array(
            'class' => array(
              $social_media_site_key,
              'social-icon',
            ),
            'target' => '_blank',
          ),
          'html' => TRUE,
        ),
      );
    }
  }

  return $output;
}
